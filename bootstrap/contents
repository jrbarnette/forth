arithops.c:
    x_plus(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_minus(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_two_star(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_two_slash(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_less_than(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_equals(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_greater_than(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_and(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_invert(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_lshift(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_negate(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_or(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_rshift(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_u_less(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_xor(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
cmdline.c:
    process_args(int argc, char *argv[], struct options *optptr)
    is_interactive(FILE *fp, struct options *optptr)
control.c:
    do_skip(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_fskip(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_plus_loop(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_do(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_i(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_j(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_unloop(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
dictionary.c:
    allot(vmstate_p vm, size_t n)
    x_comma(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_align(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_allot(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_c_comma(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_here(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_unused(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
fileops.c:
    do_open_create(vmstate_p vm, bool is_open)
    x_bin(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_close_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_create_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_file_position(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_file_size(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_open_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_r_o(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_r_w(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_read_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_read_line(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_reposition_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_w_o(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_write_file(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_write_line(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
forth.c:
    char *forth_exceptions[] =
    handle_exception(int throwcode, vmstate_p vm, char *filename)
    init_forth(vmstate_p vm)
    main(int argc, char *argv[])
memops.c:
    x_store(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_fetch(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_c_store(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_c_fetch(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_move(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_fill(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
multops.c:
    dmult(cell_ft *sp, cell_ft n1, cell_ft n2, cell_ft sign)
    x_star(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_slash(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_slash_mod(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_m_star(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_mod(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_u_m_star(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_u_m_slash_mod(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
names.c:
    search_wordlist(name_p *names, c_addr_ft id, cell_ft len)
    lookup(vmstate_p vm, c_addr_ft id, cell_ft len)
    addname(vmstate_p vm, c_addr_ft id, cell_ft len, vminstr_fn handler)
    linkname(name_p name)
    i_startname(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    i_addname(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    i_setflags(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    i_linkname(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
parse.c:
    x_refill_terminal(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
stackops.c:
    x_to_r(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_question_dup(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_depth(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_drop(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_dup(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_over(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_r_from(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_r_fetch(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_rot(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_swap(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_two_to_r(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_two_r_from(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_two_r_fetch(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_pick(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
terminal.c:
    x_emit(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
vm.c:
    execute(vmstate_p vm, xt_ft entry_xt)
    meta_lookup(vmstate_p vm, vminstr_p ip)
    meta_interpret(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    meta_compile(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    i_lookup(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    interpret_lines(vmstate_p vm, char **lines)
    quit(vmstate_p vm, FILE *input)
    do_literal(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_s_quote(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_c_quote(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    do_colon(vminstr_p ip, vmstate_p vm, vmarg_p newip)
    do_constant(vminstr_p ip, vmstate_p vm, vmarg_p data_ptr)
    do_create(vminstr_p ip, vmstate_p vm, vmarg_p data_ptr)
    do_variable(vminstr_p ip, vmstate_p vm, vmarg_p var_addr)
    x_execute(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_exit(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_throw(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_clear(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
    x_rclear(vminstr_p ip, vmstate_p vm, vmarg_p ignore)
