text defining POSTPONE
    Append the compilation semantics of name to the current
    definition.

text defining [COMPILE]
    If name has other than default compilation semantics, append
    them to the current definition; otherwise append the execution
    semantics of name.

text defining "default compilation semantics"
    [ .. ] append [ the ] execution semantics to the execution
    semantics of the current definition

N.B. The definitions mean that things like the below are equivalent:
    POSTPONE LITERAL
    [COMPILE] LITERAL

and, in compilation state, these are the same:
    [COMPILE] SWAP
    SWAP
(... but in interpretation state, the former is an error)

These are different:
    POSTPONE SWAP
    [COMPILE] SWAP
--
the standard has two categories of definition:
    standard semantics:
      + in interpretation state, execute directly, so long as
	interpretation is allowed
      + in compilation state, append execution semantics
    special compilation semantics:
      + not allowed in interpretation state
      + defined compilation semantics

so, POSTPONE looks like this
    if word has special compilation semantics
	compile the special compilation semantics
    else
	compile code that compiles the target definition's execution semantics

and [COMPILE] looks like this
    if word has special compilation semantics
	compile the special compilation semantics
    else
	compile the target definition's execution semantics

but for [COMPILE], both special and standard semantics boil down
to the xt out of FIND, so [COMPILE] becomes
    compile the target definition's xt

put another way
    : [COMPILE] ' compile, ; immediate \ no-interpret
    : POSTPONE
	word find ?dup if
	    0> if [compile] literal ['] compile, then compile,
	else
	    -13 throw
	then
    ; immediate \ no-interpret
