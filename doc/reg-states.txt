0 registers: 1 state
( ) ( R: )

1 register: 2 states
( r0 ) ( R: )
( ) ( R: r0 )

2 registers: 2! * (2+1) = 6 states
( r0 r1 ) ( R: )
( r1 r0 ) ( R: )
( r0 ) ( R: r1 )
( r1 ) ( R: r0 )
( ) ( R: r0 r1 )
( ) ( R: r1 r0 )

3 registers: 3! * (3+1) = 24 states
( r0 r1 r2 ) ( R: )
( r0 r2 r1 ) ( R: )
( r1 r0 r2 ) ( R: )
( r1 r2 r0 ) ( R: )
( r2 r0 r1 ) ( R: )
( r2 r1 r0 ) ( R: )
( r0 r1 ) ( R: r2 )
( r0 r2 ) ( R: r1 )
( r1 r0 ) ( R: r2 )
( r1 r2 ) ( R: r0 )
( r2 r0 ) ( R: r1 )
( r2 r1 ) ( R: r0 )
( r0 ) ( R: r1 r2 )
( r0 ) ( R: r2 r1 )
( r1 ) ( R: r0 r2 )
( r1 ) ( R: r2 r0 )
( r2 ) ( R: r0 r1 )
( r2 ) ( R: r1 r0 )
( ) ( R: r0 r1 r2 )
( ) ( R: r0 r2 r1 )
( ) ( R: r1 r0 r2 )
( ) ( R: r1 r2 r0 )
( ) ( R: r2 r0 r1 )
( ) ( R: r2 r1 r0 )

4 registers: 4! * (4+1) = 120 states
--
( )
( r0 )
( r1 )
( r1 r0 )
( r0 r1 )
( r2 r1 r0 )
( r2 r0 r1 )
--

operator types:
  produce:	( -- x )
  binary:	( x1 x2 -- x3 )
  drop:		( x -- )
  swap:		( x1 x2 -- x2 x1 )
  rot:		( x1 x2 x3 -- x2 x3 x1 )
  >R:		( x1 -- ) ( R: -- x1 )
  R>:		( -- x1 ) ( R: x1 -- )

distance 0: ( ) ( R: )
= produce	->		( r0 ) ( R: )
= binary	-> pop		( r0 ) ( R: )
= drop		-> pop 		( ) ( R: )
= swap		-> pop pop	( r1 r0 ) ( R: )
= rot		-> pop pop pop	( r2 r1 r0 ) ( R: )
= >R		-> pop		( ) ( R: r0 )
= R>		-> rpop		( r0 ) ( R: )

distance 1: ( r0 ) ( R: )
= produce	->		( r0 r1 ) ( R: )
= binary	-> pop		( r0 ) ( R: )
= drop		-> 		( ) ( R: )
= swap		-> pop		( r0 r1 ) ( R: )
= rot		-> pop pop	( r2 r0 r1 ) ( R: )
= >R		-> 		( ) ( R: r0 )
= R>		-> rpop		( r0 r1 ) ( R: )

distance 1: ( r1 r0 ) ( R: )
= produce	->		( r1 r0 r2 ) ( R: )
= binary	->		( r0 ) ( R: )
= drop		->		( r1 ) ( R: )
= swap		->		( r0 r1 ) ( R: )
= rot		-> pop		( r1 r0 r2 ) ( R: )
= >R		->		( r1 ) ( R: r0 )
= R>		-> rpop		( r1 r0 r2 ) ( R: )

distance 1: ( r2 r1 r0 ) ( R: )
  produce	->		( r2 r1 r0 r3 ) ( R: )
  binary	->		( r2 r1 ) ( R: )
  drop		->		( r2 r1 ) ( R: )
= swap		->		( r2 r0 r1 ) ( R: )
= rot		->		( r1 r0 r2 ) ( R: )
  >R		->		( r2 r1 ) ( R: r0 )
  R>		-> rpop		( r2 r1 r0 r3 ) ( R: )

distance 1: ( ) ( R: r0 )
  produce	->		( r1 ) ( R: r0 )
  binary	-> pop pop	( r1 ) ( R: r0 )
  drop		-> pop		( ) ( R: r0 )
  swap		-> pop pop	( r2 r1 ) ( R: r0 )
  rot		-> pop pop pop	( r3 r2 r1 ) ( R: r0 )
  >R		-> rpush pop	( ) ( R: r0 )
  R>		-> 		( r0 ) ( R: )

distance 2: ( r0 r1 ) ( R: )
  produce	->		( r0 r1 r2 ) ( R: )
  binary	->		( r0 ) ( R: )
  drop		->		( r0 ) ( R: )
  swap		->		( r1 r0 ) ( R: )
  rot		-> pop		( r0 r1 r2 ) ( R: )
  >R		->		( r0 ) ( R: r1 )
  R>		-> rpop		( r0 r1 r2 ) ( R: )

distance 2: ( r2 r0 r1 ) ( R: )
  produce	->		( r2 r0 r1 r3 ) ( R: )
  binary	->		( r2 r0 ) ( R: )
  drop		->		( r2 r0 ) ( R: )
  swap		->		( r2 r1 r0 ) ( R: )
  rot		->		( r0 r1 r2 ) ( R: )
  >R		->		( r2 r0 ) ( R: r1 )
  R>		-> rpop		( r2 r0 r1 r3 ) ( R: )

distance 2: ( r1 r0 r2 ) ( R: )
  produce	->		( r1 r0 r2 r3 ) ( R: )
  binary	->		( r1 r0 ) ( R: )
  drop		->		( r1 r0 ) ( R: )
  swap		->		( r1 r2 r0 ) ( R: )
  rot		->		( r0 r2 r1 ) ( R: )
  >R		->		( r1 r0 ) ( R: r2 )
  R>		-> rpop		( r1 r0 r2 r3 ) ( R: )

distance 2: ( r1 ) ( R: )
  produce	->		( r1 r0 ) ( R: )
  binary	-> pop		( r0 ) ( R: )
  drop		-> 		( ) ( R: )
  swap		-> pop		( r1 r0 ) ( R: )
  rot		-> pop pop	( r2 r1 r0 ) ( R: )
  >R		-> 		( ) ( R: r1 )
  R>		-> rpop		( r1 r0 ) ( R: )

distance 2: ( r1 ) ( R: r0 )
  produce	->		( r1 r2 ) ( R: r0 )
  binary	-> pop		( r1 ) ( R: r0 )
  drop		-> 		( ) ( R: r0 )
  swap		-> pop		( r1 r2 ) ( R: r0 )
  rot		-> pop pop	( r3 r1 r2 ) ( R: r0 )
  >R		-> rpush	( ) ( R: r1 )
  R>		->		( r1 r0 ) ( R: )
