#!/bin/bash
# Copyright 2019, by J. Richard Barnette. All Rights Reserved.

cd $(dirname $0)

usage() {
    echo "usage: $(basename $0) target-type" >&2
    exit 1
}

# option -l
# list the file-order on stdout
list() {
    for f in "$@"
    do
        echo $f
    done
}

# option -g (default)
# generate initdict.c stdout
gen() {
    cat <<END_HEAD
/*
 * Copyright $(date +%Y), by J. Richard Barnette. All Rights Reserved.
 */

/* This file was automatically generated by "${GENCMD}" */

END_HEAD
    cat "$@" | bootstrap/forth
}

# option -b
# generate new initdict.c and rebuild bootstrap/forth
build() {
    gen "$@" >$FILE
    cd bootstrap
    make
}

# option -t
# test changes; diff generated output against current file
changes() {
    gen "$@" | diff - $FILE
}

# option -n
# generate no output; allow errors to show
dry_run() {
    gen "$@" >/dev/null
}

# option -r
# rebuild bootstrap/forth using original initdict.c, then regenerate
regen() {
    cd bootstrap
    git checkout initdict.c
    make
    cd ..
    gen "$@" >$FILE
}

MODE=gen
FILE=bootstrap/initdict.c
while getopts gbtlnsrf: opt
do
    case $opt in
        g) MODE=gen ;;
        b) MODE=build ;;
        t) MODE=changes ;;
        l) MODE=list ;;
        n) MODE=dry_run ;;
        s) MODE=cat ;;
        r) MODE=regen ;;
        f) FILE=$OPTARG ;;
        \?) usage ;;
    esac
done
shift $(( OPTIND - 1 ))
GENCMD="$(basename $0) $*"

if [ $# -ne 1 ]
then
    usage
fi

FILEORDER="forth/$1/file-order"
if [ ! -f $FILEORDER ]
then
    echo "$FILEORDER: no file" >&2
    usage
fi

$MODE $(sed 's/#.*//' $FILEORDER)
